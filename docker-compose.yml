version: '3.8'

services:
  nginx:
    build:
      context: ./nginx # Docker build context for Nginx is the 'nginx' directory
      dockerfile: Dockerfile
    container_name: myapp_nginx
    ports:
      - "80:80"
    volumes:
      # Mount the built frontend assets into Nginx's web root
      - ./frontend/dist:/usr/share/nginx/html:ro
      # Mount the Nginx configuration file
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend # Nginx depends on the PHP backend being available
    networks:
      - myapp-network

  backend:
    build:
      context: ./backend # Docker build context for Backend is the 'backend' directory
      dockerfile: Dockerfile
    container_name: myapp_backend
    volumes:
      # Mount your PHP backend code for development, allowing hot-reloads
      - ./backend:/var/www/html
    networks:
      - myapp-network
    environment:
      # Database connection details for the PHP application
      DB_CONNECTION: pgsql
      DB_HOST: postgres # Service name of the PostgreSQL container
      DB_PORT: 5432
      DB_DATABASE: mydatabase
      DB_USERNAME: user
      DB_PASSWORD: password

  postgres:
    image: postgres:15-alpine # Use a specific PostgreSQL image version
    container_name: myapp_postgres
    environment:
      # PostgreSQL database credentials
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      # Persistent volume to store PostgreSQL data
      - postgres_data:/var/lib/postgresql/data
    networks:
      - myapp-network
    ports:
      - "5432:5432" # Expose PostgreSQL port on host (optional for internal app use)

# Define named volumes for persistent data
volumes:
  postgres_data:

# Define a custom bridge network for services to communicate securely
networks:
  myapp-network:
    driver: bridge